version: "3"

networks:
    kafka-cluster:
        name: kafka-cluster
        driver: bridge

services:
    zookeeper:
        image: zookeeper
        restart: always
        container_name: zookeeper
        hostname: zookeeper
        ports:
            - 2181:2181
        volumes:
            - ./zookeeper/data:/data
            - ./zookeeper/datalog:/datalog
        environment:
            ALLOW_ANONYMOUS_LOGIN: "yes"
        networks:
            - kafka-cluster

    kafka:
        image: bitnami/kafka
        restart: always
        container_name: kafka
        ports:
            - "9093:9093"
        volumes:
            - ./kafka:/bitnami/kafka
        environment:
            KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
            ALLOW_PLAINTEXT_LISTENER: "yes"
            KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
            KAFKA_CFG_NUM_PARTITIONS: 1
            KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
            KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
            KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
            KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
        depends_on:
            - zookeeper
        networks:
            - kafka-cluster

    # kafkaUI:
    #     image: provectuslabs/kafka-ui
    #     container_name: kafkaUI
    #     ports:
    #         - 9001:8080
    #     environment:
    #         KAFKA_CLUSTERS_0_NAME: kafka
    #         KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    #         KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    #     depends_on:
    #         - zookeeper
    #         - kafka
    #     networks:
    #         - kafka-cluster
